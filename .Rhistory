names(data)[48] <- "MUESTREO_N"
names(data)[50] <- "CAPTURA_N"
names(data)[10] <- "TIPO_FLOTA"
names(data) <- toupper(names(data))
data        <- data[c(1:13,46, 45, 47:52,14:44)]
data        <- data[order(data$YEAR, data$MES, data$PUERTO), ]
names(data)
data$YEAR_SB <- data$YEAR
c(3,5,6,7) %in% 6
data$YEAR_SB[data$MONTH %in% 1:3] <- rep(data$YEAR - 1, length.out = sum(data$MONTH %in% 1:3))
data$SEMESTRE <- 1
data$SEMESTRE[data$MES %in% c(1:3,10:12)] <- 2
data$SEMB <- paste0("Sem. ",data$YEAR_SB,"-",data$SEMESTRE)
data$SEMB
data$YEAR_SB <- data$YEAR
data$YEAR_SB[data$MONTH %in% 1:3] <- data$YEAR[data$MONTH %in% 1:3] - 1
data$SEMESTRE <- 1
data$SEMESTRE[data$MES %in% c(1:3,10:12)] <- 2
data$SEMB <- paste0("Sem. ",data$YEAR_SB,"-",data$SEMESTRE)
write.csv(data, outFile, row.names = F)
names(data)
source("J:/anchoveta/juveniles_anchoveta/R/5_rbind-standardized_data.R", encoding = 'UTF-8', echo=TRUE)
rm(list = ls()); gc(reset = T)
# -----------------------------------------------------------------------------------------------------------------
# Cargar archivos y paqueterías necesarias
require(grDevices)
require(fenix)
require(ggplot2)
#devtools::install_github("PabloMBooster/fenix")
# -----------------------------------------------------------------------------------------------------------------
USB <- "I:/"
dir_cin <- file.path(USB, "database/cin/")
dir_out <- file.path("cout/")
File   <- file.path(dir_cin, "DATA_JUVENILES_1972_2024.csv")
data   <- read.csv(File, encoding = "latin1", header = TRUE)
head(data)
# Paleta de colores de moda
rbPalTM = colorRampPalette(c("#FF0000", "#FF0C00", "#FF2200", "#FF3C00",
"#FF5300", "#FF6D00", "#FF8400", "#FF9C00",
"#FFB500", "#FFCC00", "#FFE600", "#FFFF00",
"#5CFF00", "#00F20C", "#00D22C", "#00B34B",
"#00936B", "#006B8D", "#0050AE", "#0033CB"))
PalColsTM = rbPalTM(180)
# Cargar mapa del Peru
areaPeru = data.frame(x = c(linePeru$lon[1], -50, -50, linePeru$lon[23513:2],
linePeru$lon[1]), y = c(linePeru$lat[1], -24, 0,
linePeru$lat[23513:2],
linePeru$lat[1]))
puertos = as.data.frame(puertosPeru)
datosPuertos = data.frame(lon = puertos$lon,
lat = puertos$lat,
names = as.character(puertos$puertos))
datosPuertos$names[15] <- "B. Independencia"
base   <- read.csv(File, encoding = "latin1", header = TRUE)
# Obtener los valores únicos de Semestre biológicos y dividirlos en grupos de 20
weeks_unicas <- unique(base$SEMB)
grupos_week <- split(weeks_unicas, ceiling(seq_along(weeks_unicas) / 16))
grupos_week
# Crear una lista para almacenar los gráficos
graficos <- list()
i =1
SemB_grupo <- grupos_week[[i]]
seq_along(grupos_week)
SemB_grupo <- grupos_week[[i]]
SemB_grupo
# Filtrar los datos para el grupo de SemB
datos_filtrados <- base %>% filter(SemB %in% SemB_grupo)
# Filtrar los datos para el grupo de SemB
datos_filtrados <- base %>% filter(SEMB %in% SemB_grupo)
datos_filtrados
names(base)
# Crear el gráfico
graficos[[i]] <- datos_filtrados %>%
geom_point(aes(LONG, LAT, fill = MODA), # colocar nombres de columnas de lon, lat y moda en la base
size = 2, shape=21, col = "black") +
coord_fixed(xlim = c(-84,-70), ylim = c(-18.5,-4)) +
geom_polygon(data = areaPeru, aes(x = x, y = y),
fill = "khaki1", colour = "black") +
geom_text(data = datosPuertos,
mapping = aes(x = lon+0.15, y = lat, label = names), size = 4.5, #ajustar tamaño del texto de los puertos
hjust = 0, colour = "gray20")+
scale_fill_gradientn(colours = PalColsTM,
name = "Moda (cm)",
limits = c(0,20), breaks = c(4,8,12,16), labels = c(4,8,12,16))+
theme_bw() +
labs(title = "Modas ", x = "Longitud", y = "Latitud") +
theme(panel.background = element_rect(fill = "white"),
axis.text = element_text(color = "black"),
axis.title = element_text(color = "black"),
plot.caption = element_text(hjust = 0),
legend.text = element_text(),
legend.title = element_text(),
legend.position = "bottom",
legend.key.width = unit(3, "cm"),
legend.key.height = unit(1, 'cm')) +
scale_y_continuous(breaks = c(-4,-6,-8,-10,-12,-14,-16,-18),
labels = c("4°S","6°S","8°S","10°S","12°S","14°S","16°S","18°S"))+
scale_x_continuous(breaks = c(-81,-78,-75,-72),
labels = c("81°W","78°W","75°W","72°W")) +
facet_wrap(~SEMB, ncol = 4, nrow = 4) + #colocar en lugar de SemB el semestre biológico
theme(text = element_text(size = 30))
datos_filtrados %>%
geom_point(aes(LONG, LAT, fill = MODA), # colocar nombres de columnas de lon, lat y moda en la base
size = 2, shape=21, col = "black")
datos_filtrados
datos_filtrados %>%
geom_point(aes(LONG, LAT, fill = MODA), # colocar nombres de columnas de lon, lat y moda en la base
size = 2, shape= 21, col = "black")
datos_filtrados %>% ggplot() +
geom_point(aes(LONG, LAT, fill = MODA), # colocar nombres de columnas de lon, lat y moda en la base
size = 2, shape= 21, col = "black")
datos_filtrados %>% ggplot() +
geom_point(aes(LONG, LAT, fill = MODA), # colocar nombres de columnas de lon, lat y moda en la base
size = 2, shape= 21, col = "black") +
coord_fixed(xlim = c(-84,-70), ylim = c(-18.5,-4))
datos_filtrados %>% ggplot() +
geom_point(aes(LONG, LAT, fill = MODA), # colocar nombres de columnas de lon, lat y moda en la base
size = 2, shape= 21, col = "black") +
coord_fixed(xlim = c(-84,-70), ylim = c(-18.5,-4)) +
geom_polygon(data = areaPeru, aes(x = x, y = y),
fill = "khaki1", colour = "black")
datos_filtrados %>% ggplot() +
geom_point(aes(LONG, LAT, fill = MODA), # colocar nombres de columnas de lon, lat y moda en la base
size = 2, shape= 21, col = "black") +
coord_fixed(xlim = c(-84,-70), ylim = c(-18.5,-4)) +
geom_polygon(data = areaPeru, aes(x = x, y = y),
fill = "khaki1", colour = "black") +
geom_text(data = datosPuertos,
mapping = aes(x = lon+0.15, y = lat, label = names), size = 4.5, #ajustar tamaño del texto de los puertos
hjust = 0, colour = "gray20")
datos_filtrados %>% ggplot() +
geom_point(aes(LONG, LAT, fill = MODA), # colocar nombres de columnas de lon, lat y moda en la base
size = 2, shape= 21, col = "black") +
coord_fixed(xlim = c(-84,-70), ylim = c(-18.5,-4)) +
geom_polygon(data = areaPeru, aes(x = x, y = y),
fill = "khaki1", colour = "black") +
geom_text(data = datosPuertos,
mapping = aes(x = lon+0.15, y = lat, label = names), size = 2, #ajustar tamaño del texto de los puertos
hjust = 0, colour = "gray20")
datos_filtrados %>% ggplot() +
geom_point(aes(LONG, LAT, fill = MODA), # colocar nombres de columnas de lon, lat y moda en la base
size = 2, shape= 21, col = "black") +
coord_fixed(xlim = c(-84,-70), ylim = c(-18.5,-4)) +
geom_polygon(data = areaPeru, aes(x = x, y = y),
fill = "khaki1", colour = "black") +
geom_text(data = datosPuertos,
mapping = aes(x = lon+0.15, y = lat, label = names), size = 3, #ajustar tamaño del texto de los puertos
hjust = 0, colour = "gray20")
datos_filtrados %>% ggplot() +
geom_point(aes(LONG, LAT, fill = MODA), # colocar nombres de columnas de lon, lat y moda en la base
size = 2, shape= 21, col = "black") +
coord_fixed(xlim = c(-84,-70), ylim = c(-18.5,-4)) +
geom_polygon(data = areaPeru, aes(x = x, y = y),
fill = "khaki1", colour = "black") +
geom_text(data = datosPuertos,
mapping = aes(x = lon+0.15, y = lat, label = names), size = 3, #ajustar tamaño del texto de los puertos
hjust = 0, colour = "gray20") +
scale_fill_gradientn(colours = PalColsTM,
name = "Moda (cm)",
limits = c(0,20), breaks = c(4,8,12,16), labels = c(4,8,12,16))+
theme_bw()
datos_filtrados %>% ggplot() +
geom_point(aes(LONG, LAT, fill = MODA), # colocar nombres de columnas de lon, lat y moda en la base
size = 2, shape= 21, col = "black") +
coord_fixed(xlim = c(-84,-70), ylim = c(-18, -4)) +
geom_polygon(data = areaPeru, aes(x = x, y = y),
fill = "khaki1", colour = "black") +
geom_text(data = datosPuertos,
mapping = aes(x = lon+0.15, y = lat, label = names), size = 3, #ajustar tamaño del texto de los puertos
hjust = 0, colour = "gray20") +
scale_fill_gradientn(colours = PalColsTM,
name = "Moda (cm)",
limits = c(0,20), breaks = c(4,8,12,16), labels = c(4,8,12,16))+
theme_bw()
datos_filtrados %>% ggplot() +
geom_point(aes(LONG, LAT, fill = MODA), # colocar nombres de columnas de lon, lat y moda en la base
size = 2, shape= 21, col = "black") +
coord_fixed(xlim = c(-84,-70), ylim = c(-18, -4)) +
geom_polygon(data = areaPeru, aes(x = x, y = y),
fill = "khaki1", colour = "black") +
geom_text(data = datosPuertos,
mapping = aes(x = lon+0.15, y = lat, label = names), size = 3, #ajustar tamaño del texto de los puertos
hjust = 0, colour = "gray20") +
scale_fill_gradientn(colours = PalColsTM,
name = "Moda (cm)",
limits = c(0,20), breaks = c(4,8,12,16), labels = c(4,8,12,16))+
theme_bw() +
labs(title = "Modas ", x = "Longitud", y = "Latitud") +
theme(panel.background = element_rect(fill = "white"),
axis.text = element_text(color = "black"),
axis.title = element_text(color = "black"),
plot.caption = element_text(hjust = 0),
legend.text = element_text(),
legend.title = element_text(),
legend.position = "bottom",
legend.key.width = unit(3, "cm"),
legend.key.height = unit(1, 'cm')) +
scale_y_continuous(breaks = c(-4,-6,-8,-10,-12,-14,-16,-18),
labels = c("4°S","6°S","8°S","10°S","12°S","14°S","16°S","18°S"))+
scale_x_continuous(breaks = c(-81,-78,-75,-72),
labels = c("81°W","78°W","75°W","72°W")) +
facet_wrap(~SEMB, ncol = 4, nrow = 4) + #colocar en lugar de SemB el semestre biológico
theme(text = element_text(size = 30))
# Crear una lista para almacenar los gráficos
graficos <- list()
# Generar gráficos para cada grupo de SemB
for (i in seq_along(grupos_week)) {
SemB_grupo <- grupos_week[[i]]
# Filtrar los datos para el grupo de SemB
datos_filtrados <- base %>% filter(SEMB %in% SemB_grupo)
# Crear el gráfico
graficos[[i]] <- datos_filtrados %>% ggplot() +
geom_point(aes(LONG, LAT, fill = MODA), # colocar nombres de columnas de lon, lat y moda en la base
size = 2, shape= 21, col = "black") +
coord_fixed(xlim = c(-84,-70), ylim = c(-18, -4)) +
geom_polygon(data = areaPeru, aes(x = x, y = y),
fill = "khaki1", colour = "black") +
geom_text(data = datosPuertos,
mapping = aes(x = lon+0.15, y = lat, label = names), size = 3, #ajustar tamaño del texto de los puertos
hjust = 0, colour = "gray20") +
scale_fill_gradientn(colours = PalColsTM,
name = "Moda (cm)",
limits = c(0,20), breaks = c(4,8,12,16), labels = c(4,8,12,16))+
theme_bw() +
labs(title = "Modas ", x = "Longitud", y = "Latitud") +
theme(panel.background = element_rect(fill = "white"),
axis.text = element_text(color = "black"),
axis.title = element_text(color = "black"),
plot.caption = element_text(hjust = 0),
legend.text = element_text(),
legend.title = element_text(),
legend.position = "bottom",
legend.key.width = unit(3, "cm"),
legend.key.height = unit(1, 'cm')) +
scale_y_continuous(breaks = c(-4,-6,-8,-10,-12,-14,-16,-18),
labels = c("4°S","6°S","8°S","10°S","12°S","14°S","16°S","18°S"))+
scale_x_continuous(breaks = c(-81,-78,-75,-72),
labels = c("81°W","78°W","75°W","72°W")) +
facet_wrap(~SEMB, ncol = 4, nrow = 4) + #colocar en lugar de SemB el semestre biológico
theme(text = element_text(size = 30))
}
# Guardar los gráficos
for (i in seq_along(graficos)) {
ggsave(file.path(dir_out, paste0("Mapas_Moda_SemB_p", i, ".png")), plot = graficos[[i]],
width = 16.5, height = 23.4, units = "in")
}
range(base$MODA)
observaciones <- datos_filtrados %>%
group_by(SEMB) %>%
summarise(n_obs = n())
observaciones
source("J:/anchoveta/juveniles_anchoveta/R/7_Mapa_Modas_SemB.R", encoding = 'UTF-8', echo=TRUE)
SemB_grupo <- grupos_week[[i]]
# Filtrar los datos para el grupo de SemB
datos_filtrados <- base %>% filter(SEMB %in% SemB_grupo)
observaciones <- datos_filtrados %>%
group_by(SEMB) %>%
summarise(n_obs = n())
# Crear el gráfico
graficos[[i]] <- datos_filtrados %>% ggplot() +
geom_point(aes(LONG, LAT, fill = MODA), # colocar nombres de columnas de lon, lat y moda en la base
size = 2, shape= 21, col = "black") +
coord_fixed(xlim = c(-84,-70), ylim = c(-18, -4)) +
geom_polygon(data = areaPeru, aes(x = x, y = y),
fill = "khaki1", colour = "black") +
geom_text(data = datosPuertos,
mapping = aes(x = lon+0.15, y = lat, label = names), size = 3, #ajustar tamaño del texto de los puertos
hjust = 0, colour = "gray20") +
scale_fill_gradientn(colours = PalColsTM,
name = "Moda (cm)",
limits = c(5,18.5), breaks = c(4,8,12,16), labels = c(4,8,12,16))+
theme_bw() +
labs(title = "Modas ", x = "Longitud", y = "Latitud") +
theme(panel.background = element_rect(fill = "white"),
axis.text = element_text(color = "black"),
axis.title = element_text(color = "black"),
plot.caption = element_text(hjust = 0),
legend.text = element_text(),
legend.title = element_text(),
legend.position = "bottom",
legend.key.width = unit(3, "cm"),
legend.key.height = unit(1, 'cm')) +
scale_y_continuous(breaks = c(-4,-6,-8,-10,-12,-14,-16,-18),
labels = c("4°S","6°S","8°S","10°S","12°S","14°S","16°S","18°S"))+
scale_x_continuous(breaks = c(-81,-78,-75,-72),
labels = c("81°W","78°W","75°W","72°W")) +
facet_wrap(~SEMB, ncol = 4, nrow = 4) +
annotate("text", x = -72.0, y = -4.5,
label = paste("n =", observaciones$n_obs[match(SEMB, observaciones$SEMB)]),
size = 5, color = "black")  +
theme(text = element_text(size = 30),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10))
source("J:/anchoveta/juveniles_anchoveta/R/7_Mapa_Modas_SemB.R", encoding = 'UTF-8', echo=TRUE)
source("J:/anchoveta/juveniles_anchoveta/R/7_Mapa_Modas_SemB.R", encoding = 'UTF-8', echo=TRUE)
(range(base$MODA, na.rm = TRUE))
rm(list = ls()); gc(reset = T)
# Cargar archivos y paqueterías necesarias
require(grDevices)
require(fenix)
require(ggplot2)
#install.packages("lubridate")
require(lubridate)
# devtools::install_github("PabloMBooster/fenix")
# -----------------------------------------------------------------------------------------------------------------
USB <- "I:/"
dir_cin <- file.path(USB, "database/cin/")
dir_out <- file.path("cout/")
File   <- file.path(dir_cin, "DATA_JUVENILES_1972_2024.csv")
base   <- read.csv(File, encoding = "latin1", header = TRUE)
rm(list = ls()); gc(reset = T)
# -----------------------------------------------------------------------------------------------------------------
# Cargar archivos y paqueterías necesarias
require(grDevices)
require(fenix)
require(ggplot2)
require(lubridate)
# devtools::install_github("PabloMBooster/fenix")
# -----------------------------------------------------------------------------------------------------------------
USB <- "I:/"
dir_cin <- file.path(USB, "database/cin/")
dir_out <- file.path("cout/")
File   <- file.path(dir_cin, "DATA_JUVENILES_1972_2024.csv")
base   <- read.csv(File, encoding = "latin1", header = TRUE)
PalCols = rbPal(101)
# Cargar datos Mapa Perú --------------------------------------------------
rbPal = colorRampPalette(c("#99CCCC", "#99CC33", "#00FF00","#006633",
"#FFFF00", "#FF8000", "#FF0000", "#800000", "black"))
areaPeru = data.frame(x = c(linePeru$lon[1], -50, -50, linePeru$lon[23513:2],
linePeru$lon[1]), y = c(linePeru$lat[1], -24, 0,
linePeru$lat[23513:2],
linePeru$lat[1]))
puertos = as.data.frame(puertosPeru)
datosPuertos = data.frame(lon = puertos$lon,
lat = puertos$lat,
names = as.character(puertos$puertos))
datosPuertos$names[15] <- "B. Independencia"
base$LONG = abs(base$LONG)
base$LAT = abs(base$LAT)
SB = unique(base$SEMB)
require(dplyr)
data_Mapas_SemBiol = NULL
data_Mapas_SemBiol = NULL
for (s in seq_along(SB)) {
print(SB[s])
dato_SemBiol = base[base$SemB %in% SB[s],]
grid = 1/12 # tamaño de grilla
# Mapa relación Juv/Total
xbins <- seq(70, 92, by = grid)
ybins <- seq(4, 19, by = grid)
# Create a 2D binned statistic
Resumen <- dato_SemBiol %>%
mutate(
bin_x = cut(LONG, breaks = xbins, labels = xbins[1:(length(xbins)-1)] + (grid)/2),
bin_y = cut(LAT, breaks = ybins, labels = ybins[1:(length(ybins)-1)] + (grid)/2)
) %>%
dplyr::group_by(bin_x, bin_y) %>%
summarise(
sum_Juv = sum(JUV_P), #Nombre de columna de captura de juveniles
sum_Ton = sum(CAPTURA_P) #Nombre de columna de captura total
) %>%
mutate(
juvR = ifelse(sum_Juv == 0, NA, ifelse(sum_Ton != 0, sum_Juv / sum_Ton, NA))
) %>%
ungroup()
Resumen$bin_x <- as.numeric(as.character.factor(Resumen$bin_x))*-1
Resumen$bin_y <- as.numeric(as.character.factor(Resumen$bin_y))*-1
Resumen$juvR <- round(Resumen$juvR*100, 0)
Resumen$SemB = SB[s]
data_Mapas_SemBiol = rbind.data.frame(data_Mapas_SemBiol, Resumen)
}
data_Mapas_SemBiol
Resumen
print(SB[s])
dato_SemBiol = base[base$SemB %in% SB[s],]
dato_SemBiol = base[base$SEMB %in% SB[s],]
dato_SemBiol
data_Mapas_SemBiol = NULL
for (s in seq_along(SB)) {
print(SB[s])
dato_SemBiol = base[base$SEMB %in% SB[s],]
grid = 1/12 # tamaño de grilla
# Mapa relación Juv/Total
xbins <- seq(70, 92, by = grid)
ybins <- seq(4, 19, by = grid)
# Create a 2D binned statistic
Resumen <- dato_SemBiol %>%
mutate(
bin_x = cut(LONG, breaks = xbins, labels = xbins[1:(length(xbins)-1)] + (grid)/2),
bin_y = cut(LAT, breaks = ybins, labels = ybins[1:(length(ybins)-1)] + (grid)/2)
) %>%
dplyr::group_by(bin_x, bin_y) %>%
summarise(
sum_Juv = sum(JUV_P), #Nombre de columna de captura de juveniles
sum_Ton = sum(CAPTURA_P) #Nombre de columna de captura total
) %>%
mutate(
juvR = ifelse(sum_Juv == 0, NA, ifelse(sum_Ton != 0, sum_Juv / sum_Ton, NA))
) %>%
ungroup()
Resumen$bin_x <- as.numeric(as.character.factor(Resumen$bin_x))*-1
Resumen$bin_y <- as.numeric(as.character.factor(Resumen$bin_y))*-1
Resumen$juvR <- round(Resumen$juvR*100, 0)
Resumen$SemB = SB[s]
data_Mapas_SemBiol = rbind.data.frame(data_Mapas_SemBiol, Resumen)
}
data_Mapas_SemBiol
# Obtener los valores únicos de Semestre biológicos y dividirlos en grupos de 0
weeks_unicas <- as.vector(sort(unique(base$SEMB)))
weeks_unicas
grupos_week <- split(weeks_unicas, ceiling(seq_along(weeks_unicas) / 16))
# Crear una lista para almacenar los gráficos
graficos <- list()
i = 1
SemB_grupo <- grupos_week[[i]]
# Filtrar los datos para el grupo de SemB
datos_filtrados <- data_Mapas_SemBiol %>% filter(SEMB %in% SemB_grupo)
# Filtrar los datos para el grupo de SemB
datos_filtrados <- data_Mapas_SemBiol %>% filter(SemB %in% SemB_grupo)
datos_filtrados
datos_filtrados %>% ggplot()+
stat_summary_2d(aes(x = bin_x, y = bin_y, z = juvR),
fun = "sum", binwidth= 1/12)
datos_filtrados %>% ggplot() +
stat_summary_2d(aes(x = bin_x, y = bin_y, z = juvR),
fun = "sum", binwidth= 1/12) +
facet_wrap(~SemB, ncol = 4, nrow = 4)
datos_filtrados %>% ggplot() +
stat_summary_2d(aes(x = bin_x, y = bin_y, z = juvR),
fun = "sum", binwidth= 1/12) +
facet_wrap(~SemB, ncol = 4, nrow = 4)+
coord_fixed(xlim = c(-81,-72), ylim = c(-18,-4)) +
geom_polygon(data = areaPeru, aes(x = x, y = y),
fill = "khaki1", colour = "black")
datos_filtrados %>% ggplot() +
stat_summary_2d(aes(x = bin_x, y = bin_y, z = juvR),
fun = "sum", binwidth= 1/12) +
facet_wrap(~SemB, ncol = 4, nrow = 4)+
coord_fixed(xlim = c(-81,-72), ylim = c(-18,-4)) +
geom_polygon(data = areaPeru, aes(x = x, y = y),
fill = "khaki1", colour = "black") +
geom_text(data = datosPuertos,
mapping = aes(x = lon+0.15, y = lat, label = names), size = 6,
hjust = 0, colour = "gray20")+
scale_fill_gradientn(colours = PalCols, name = "Porc. (%)", limits = c(0,100))+
theme_bw() +
labs(title = "Captura relativa de juveniles por semana", x = "Longitud", y = "Latitud") +
theme(panel.background = element_rect(fill = "white"),
axis.text = element_text(color = "black"),
axis.title = element_text(color = "black"),
plot.caption = element_text(hjust = 0),
legend.text = element_text(),
legend.title = element_text(),
legend.position = "bottom",
legend.key.width = unit(3, "cm"),
legend.key.height = unit(1, 'cm'))
PalCols = rbPal(101)
datos_filtrados %>% ggplot() +
stat_summary_2d(aes(x = bin_x, y = bin_y, z = juvR),
fun = "sum", binwidth= 1/12) +
facet_wrap(~SemB, ncol = 4, nrow = 4)+
coord_fixed(xlim = c(-81,-72), ylim = c(-18,-4)) +
geom_polygon(data = areaPeru, aes(x = x, y = y),
fill = "khaki1", colour = "black") +
geom_text(data = datosPuertos,
mapping = aes(x = lon+0.15, y = lat, label = names), size = 6,
hjust = 0, colour = "gray20")
datos_filtrados %>% ggplot() +
stat_summary_2d(aes(x = bin_x, y = bin_y, z = juvR),
fun = "sum", binwidth= 1/12) +
facet_wrap(~SemB, ncol = 4, nrow = 4)+
coord_fixed(xlim = c(-81,-72), ylim = c(-18,-4)) +
geom_polygon(data = areaPeru, aes(x = x, y = y),
fill = "khaki1", colour = "black") +
geom_text(data = datosPuertos,
mapping = aes(x = lon+0.15, y = lat, label = names), size = 6,
hjust = 0, colour = "gray20") +
scale_fill_gradientn(colours = PalCols, name = "Porc. (%)", limits = c(0,100))+
theme_bw()
datos_filtrados %>% ggplot() +
stat_summary_2d(aes(x = bin_x, y = bin_y, z = juvR),
fun = "sum", binwidth= 1/12) +
facet_wrap(~SemB, ncol = 4, nrow = 4)+
coord_fixed(xlim = c(-81,-72), ylim = c(-18,-4)) +
geom_polygon(data = areaPeru, aes(x = x, y = y),
fill = "khaki1", colour = "black") +
geom_text(data = datosPuertos,
mapping = aes(x = lon+0.15, y = lat, label = names), size = 6,
hjust = 0, colour = "gray20") +
scale_fill_gradientn(colours = PalCols, name = "Porc. (%)", limits = c(0,100))+
theme_bw() +
labs(title = "Captura relativa de juveniles por semana", x = "Longitud", y = "Latitud") +
theme(panel.background = element_rect(fill = "white"),
axis.text = element_text(color = "black"),
axis.title = element_text(color = "black"),
plot.caption = element_text(hjust = 0),
legend.text = element_text(),
legend.title = element_text(),
legend.position = "bottom",
legend.key.width = unit(3, "cm"),
legend.key.height = unit(1, 'cm')) +
scale_y_continuous(breaks = c(-4,-6,-8,-10,-12,-14,-16,-18),
labels = c("4°S","6°S","8°S","10°S","12°S","14°S","16°S","18°S"))+
scale_x_continuous(breaks = c(-81,-78,-75,-72),
labels = c("81°W","78°W","75°W","72°W")) +
theme(text = element_text(size = 30))
axis.text.x = element_text(, size = 24)
source("J:/anchoveta/juveniles_anchoveta/R/8_Mapa_CaptRelJuv_SemB.R", encoding = 'UTF-8', echo=TRUE)
source("J:/anchoveta/juveniles_anchoveta/R/8_Mapa_CaptRelJuv_SemB.R", encoding = 'UTF-8', echo=TRUE)
source("J:/anchoveta/juveniles_anchoveta/R/8_Mapa_CaptRelJuv_SemB.R", encoding = 'UTF-8', echo=TRUE)
source("J:/anchoveta/juveniles_anchoveta/R/8_Mapa_CaptRelJuv_SemB.R", encoding = 'UTF-8', echo=TRUE)
source("J:/anchoveta/juveniles_anchoveta/R/8_Mapa_CaptRelJuv_SemB.R", encoding = 'UTF-8', echo=TRUE)
